@page "/Login"
@inject AuthService AuthService
@inject DataState DataState
@inject LoginDialogService LoginDialogService

<PageTitle>Login</PageTitle>


<MudText Typo="Typo.h4" GutterBottom="true">Login</MudText>


<MudText Typo="Typo.body1" GutterBottom="true">@displayText</MudText>
<MudStack Row="true">
    @if (DataState.Authorized is false)
    {
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="width:90px" OnClick="OpenLoginDialog">Login</MudButton>
    }
    else
    {
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="width:90px" OnClick="SignOutAsync">Logout</MudButton>
    }
    <MudButton Style="width:110px" OnClick="CheckAuthAsync">Check Auth</MudButton>
</MudStack>

@code {
    public string displayText = string.Empty;

    public string loginUserName = string.Empty;
    public string loginPassword = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        displayText = DataState.Authorized ? "You are signed in!" : "You are unauthorized!";
    }

    private async Task CheckAuthAsync()
    {
        var success = await AuthService.CheckAuthAsync();
        displayText = success ? "You are signed in!" : "You are unauthorized!";
    }
    
    private async Task OpenLoginDialog()
    {
        var success = await LoginDialogService.LoginDialog();
        if (success)
        {
            displayText = "You are signed in!";
            DataState.Authorized = true;
            StateHasChanged();
        }
    }

    private async Task SignOutAsync()
    {
        var success = await AuthService.SignOutAsync();
        if (success)
        {
            displayText = "Successfully logged out";
            DataState.Authorized = false;
        }
        else
        {
            displayText = "An error occurred";
        }
    }
}
