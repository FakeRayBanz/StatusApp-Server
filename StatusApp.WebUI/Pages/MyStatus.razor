@page "/mystatus"

@inject DataState DataState
@inject StatusAppClient StatusAppClient

<PageTitle>My Status</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">My Status</MudText>
@if (DataState.StatusUser is not null)
{
    <MudStack Style="width: fit-content">
        <MudCard Elevation="2">
            <MudCardContent>
                <MudStack Row="true" Justify="Justify.SpaceBetween">
                    <MudStack>
                        <MudText Typo="Typo.h6">@DataState.StatusUser.FirstName @DataState.StatusUser.LastName</MudText>
                        <MudText Typo="Typo.body2">@DataState.StatusUser.Status</MudText>
                    </MudStack>
                    <MudAvatar Color="@(DataState.StatusUser.Online ? Color.Success : Color.Error)"></MudAvatar>
                </MudStack>
            </MudCardContent>
        </MudCard>

        <MudButtonGroup Class="pb-5" Style="width: 100%" Color="Color.Primary" Variant="Variant.Outlined" OverrideStyles="false">
            <MudButton Color="Color.Primary" FullWidth="true" Variant="DataState.StatusUser.Online ? Variant.Filled : Variant.Outlined" OnClick="UpdateStatusUserOnlineTrue">Online</MudButton>
            <MudButton Color="Color.Primary" FullWidth="true" Variant="!DataState.StatusUser.Online ? Variant.Filled : Variant.Outlined" OnClick="UpdateStatusUserOnlineFalse">Offline</MudButton>
        </MudButtonGroup>

        <MudTextField @bind-Value="UserStatusString" Label="Update your status" Variant="Variant.Outlined"></MudTextField>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="UpdateStatusUserStatus">Save</MudButton>
    </MudStack>
}



@code {
    public string UserStatusString { get; set; } = string.Empty;
    //public StatusUserDto StatusUser { get; set; }
    protected override async Task OnInitializedAsync()
    {
        UserStatusString = DataState?.StatusUser?.Status ?? string.Empty;
    }
    
    private async Task UpdateStatusUserOnlineTrue()
    {
        if (DataState.StatusUser?.Online == true)
            return;
        
        DataState.StatusUser!.Online = true;
        DataState.StatusUser = await StatusAppClient.UpdateUserAsync(DataState.StatusUser);
    }
    
    private async Task UpdateStatusUserOnlineFalse()
    {
        if (DataState.StatusUser?.Online == false)
            return;
        
        DataState.StatusUser!.Online = false;
        DataState.StatusUser = await StatusAppClient.UpdateUserAsync(DataState.StatusUser);
    }
    
    private async Task UpdateStatusUserStatus()
    {
        DataState.StatusUser!.Status = UserStatusString;

        DataState.StatusUser = await StatusAppClient.UpdateUserAsync(DataState.StatusUser);
    }
}
