@using StatusApp.WebUI.Components
@inherits LayoutComponentBase
@inject Client HttpClient
@inject IDialogService DialogService


<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Href="https://mudblazor.com/" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">StatusApp.WebUI</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @* https://mudblazor.com/utilities/spacing *@
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    bool authorized = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    protected override async Task OnInitializedAsync()
    {
        authorized = await CheckAuthAsync();
        if (authorized is false)
        {
            var options = new DialogOptions { CloseOnEscapeKey = false, CloseButton = false, DisableBackdropClick = true};
            DialogService.Show<LoginDialog>("Login", options);
        }
    }
    
    private async Task<bool> CheckAuthAsync()
    {
        try
        {
            var response = await HttpClient.CheckAuthAsync();
            return true;
        }
        catch(ApiException e)
        {
            var statusCode = e.StatusCode;
            return false;
        }
    }
}